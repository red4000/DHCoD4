#include "hCrypt.h"


char countdown[] = {C('c'), C('o'), C('u'), C('n'), C('t'), C('d'), C('o'), C('w'), C('n'), C('\0')};
char bog[] = {C('b'), C('o'), C('g'), C('\0')};
char backlot[] = {C('b'), C('a'), C('c'), C('k'), C('l'), C('o'), C('t'), C('\0')};
char killhouse[] = {C('k'), C('i'), C('l'), C('l'), C('h'), C('o'), C('u'), C('s'), C('e'), C('\0')};
char j_head[] = {C('j'), C('_'), C('h'), C('e'), C('a'), C('d'), C('\0')};
char j_spineupper[] = {C('j'), C('_'), C('s'), C('p'), C('i'), C('n'), C('e'), C('u'), C('p'), C('p'), C('e'), C('r'), C('\0')};
char j_spinelower[] = {C('j'), C('_'), C('s'), C('p'), C('i'), C('n'), C('e'), C('l'), C('o'), C('w'), C('e'), C('r'), C('\0')};
char j_hip_le[] = {C('j'), C('_'), C('h'), C('i'), C('p'), C('_'), C('l'), C('e'), C('\0')};
char j_hip_ri[] = {C('j'), C('_'), C('h'), C('i'), C('p'), C('_'), C('r'), C('i'), C('\0')};
char j_shoulder_le[] = {C('j'), C('_'), C('s'), C('h'), C('o'), C('u'), C('l'), C('d'), C('e'), C('r'), C('_'), C('l'), C('e'), C('\0')};
char j_shoulder_ri[] = {C('j'), C('_'), C('s'), C('h'), C('o'), C('u'), C('l'), C('d'), C('e'), C('r'), C('_'), C('r'), C('i'), C('\0')};
char j_knee_le[] = {C('j'), C('_'), C('k'), C('n'), C('e'), C('e'), C('_'), C('l'), C('e'), C('\0')};
char j_knee_ri[] = {C('j'), C('_'), C('k'), C('n'), C('e'), C('e'), C('_'), C('r'), C('i'), C('\0')};
char j_ankle_le[] = {C('j'), C('_'), C('a'), C('n'), C('k'), C('l'), C('e'), C('_'), C('l'), C('e'), C('\0')};
char j_ankle_ri[] = {C('j'), C('_'), C('a'), C('n'), C('k'), C('l'), C('e'), C('_'), C('r'), C('i'), C('\0')};
char j_wrist_le[] = {C('j'), C('_'), C('w'), C('r'), C('i'), C('s'), C('t'), C('_'), C('l'), C('e'), C('\0')};
char j_wrist_ri[] = {C('j'), C('_'), C('w'), C('r'), C('i'), C('s'), C('t'), C('_'), C('r'), C('i'), C('\0')};
char j_clavicle_le[] = {C('j'), C('_'), C('c'), C('l'), C('a'), C('v'), C('i'), C('c'), C('l'), C('e'), C('_'), C('l'), C('e'), C('\0')};
char j_clavicle_ri[] = {C('j'), C('_'), C('c'), C('l'), C('a'), C('v'), C('i'), C('c'), C('l'), C('e'), C('_'), C('r'), C('i'), C('\0')};
char j_elbow_le[] = {C('j'), C('_'), C('e'), C('l'), C('b'), C('o'), C('w'), C('_'), C('l'), C('e'), C('\0')};
char j_elbow_ri[] = {C('j'), C('_'), C('e'), C('l'), C('b'), C('o'), C('w'), C('_'), C('r'), C('i'), C('\0')};
char j_neck[] = {C('j'), C('_'), C('n'), C('e'), C('c'), C('k'), C('\0')};
char j_helmet[] = {C('j'), C('_'), C('h'), C('e'), C('l'), C('m'), C('e'), C('t'), C('\0')};
char WEAPON_M2FRAGGRENADE[] = {C('W'), C('E'), C('A'), C('P'), C('O'), C('N'), C('_'), C('M'), C('2'), C('F'), C('R'), C('A'), C('G'), C('G'), C('R'), C('E'), C('N'), C('A'), C('D'), C('E'), C('\0')};
char WEAPON_CLAYMORE[] = {C('W'), C('E'), C('A'), C('P'), C('O'), C('N'), C('_'), C('C'), C('L'), C('A'), C('Y'), C('M'), C('O'), C('R'), C('E'), C('\0')};
char WEAPON_FLASH_GRENADE[] = {C('W'), C('E'), C('A'), C('P'), C('O'), C('N'), C('_'), C('F'), C('L'), C('A'), C('S'), C('H'), C('_'), C('G'), C('R'), C('E'), C('N'), C('A'), C('D'), C('E'), C('\0')};
char WEAPON_CONCUSSION_GRENADE[] = {C('W'), C('E'), C('A'), C('P'), C('O'), C('N'), C('_'), C('C'), C('O'), C('N'), C('C'), C('U'), C('S'), C('S'), C('I'), C('O'), C('N'), C('_'), C('G'), C('R'), C('E'), C('N'), C('A'), C('D'), C('E'), C('\0')};
char WEAPON_C4[] = {C('W'), C('E'), C('A'), C('P'), C('O'), C('N'), C('_'), C('C'), C('4'), C('\0')};
char WEAPON_SMOKE_GRENADE[] = {C('W'), C('E'), C('A'), C('P'), C('O'), C('N'), C('_'), C('S'), C('M'), C('O'), C('K'), C('E'), C('_'), C('G'), C('R'), C('E'), C('N'), C('A'), C('D'), C('E'), C('\0')};
char WEAPON_M203[] = {C('W'), C('E'), C('A'), C('P'), C('O'), C('N'), C('_'), C('M'), C('2'), C('0'), C('3'), C('\0')};
char WEAPON_RPG[] = {C('W'), C('E'), C('A'), C('P'), C('O'), C('N'), C('_'), C('R'), C('P'), C('G'), C('\0')};
char Bots[] = {C('B'), C('o'), C('t'), C('s'), C('\0')};
char Player_Auto_Aim[] = {C('P'), C('l'), C('a'), C('y'), C('e'), C('r'), C(' '), C('A'), C('u'), C('t'), C('o'), C(' '), C('A'), C('i'), C('m'), C('\0')};
char Auto_Aim_Max_Range[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('A'), C('i'), C('m'), C(' '), C('M'), C('a'), C('x'), C(' '), C('R'), C('a'), C('n'), C('g'), C('e'), C('\0')};
char Aim_Bone_Quantity[] = {C('A'), C('i'), C('m'), C(' '), C('B'), C('o'), C('n'), C('e'), C(' '), C('Q'), C('u'), C('a'), C('n'), C('t'), C('i'), C('t'), C('y'), C('\0')};
char Aim_Bone_Start_Index[] = {C('A'), C('i'), C('m'), C(' '), C('B'), C('o'), C('n'), C('e'), C(' '), C('S'), C('t'), C('a'), C('r'), C('t'), C(' '), C('I'), C('n'), C('d'), C('e'), C('x'), C('\0')};
char Aim_View_Lock[] = {C('A'), C('i'), C('m'), C(' '), C('V'), C('i'), C('e'), C('w'), C(' '), C('L'), C('o'), C('c'), C('k'), C('\0')};
char Auto_Fire[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('F'), C('i'), C('r'), C('e'), C('\0')};
char Auto_Sight[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('S'), C('i'), C('g'), C('h'), C('t'), C('\0')};
char Aim_FOV[] = {C('A'), C('i'), C('m'), C(' '), C('F'), C('O'), C('V'), C('\0')};
char Bots_continued[] = {C('B'), C('o'), C('t'), C('s'), C(' '), C('c'), C('o'), C('n'), C('t'), C('i'), C('n'), C('u'), C('e'), C('d'), C('\0')};
char Aim_Target_Lock[] = {C('A'), C('i'), C('m'), C(' '), C('T'), C('a'), C('r'), C('g'), C('e'), C('t'), C(' '), C('L'), C('o'), C('c'), C('k'), C('\0')};
char Aim_Prediction[] = {C('A'), C('i'), C('m'), C(' '), C('P'), C('r'), C('e'), C('d'), C('i'), C('c'), C('t'), C('i'), C('o'), C('n'), C('\0')};
char Local_Prediction[] = {C('L'), C('o'), C('c'), C('a'), C('l'), C(' '), C('P'), C('r'), C('e'), C('d'), C('i'), C('c'), C('t'), C('i'), C('o'), C('n'), C('\0')};
char Ping_Correction[] = {C('P'), C('i'), C('n'), C('g'), C(' '), C('C'), C('o'), C('r'), C('r'), C('e'), C('c'), C('t'), C('i'), C('o'), C('n'), C('\0')};
char Ping_Divisor[] = {C('P'), C('i'), C('n'), C('g'), C(' '), C('D'), C('i'), C('v'), C('i'), C('s'), C('o'), C('r'), C('\0')};
char Ping_Scalar[] = {C('P'), C('i'), C('n'), C('g'), C(' '), C('S'), C('c'), C('a'), C('l'), C('a'), C('r'), C('\0')};
char Silent_Aim[] = {C('S'), C('i'), C('l'), C('e'), C('n'), C('t'), C(' '), C('A'), C('i'), C('m'), C('\0')};
char Auto_Wall[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('W'), C('a'), C('l'), C('l'), C('\0')};
char Auto_Wall_Tolerance[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('W'), C('a'), C('l'), C('l'), C(' '), C('T'), C('o'), C('l'), C('e'), C('r'), C('a'), C('n'), C('c'), C('e'), C('\0')};
char Bots_continued_2[] = {C('B'), C('o'), C('t'), C('s'), C(' '), C('c'), C('o'), C('n'), C('t'), C('i'), C('n'), C('u'), C('e'), C('d'), C(' '), C('2'), C('\0')};
char Aim_Sorting_Method[] = {C('A'), C('i'), C('m'), C(' '), C('S'), C('o'), C('r'), C('t'), C('i'), C('n'), C('g'), C(' '), C('M'), C('e'), C('t'), C('h'), C('o'), C('d'), C('\0')};
char Aim_Position_Clip[] = {C('A'), C('i'), C('m'), C(' '), C('P'), C('o'), C('s'), C('i'), C('t'), C('i'), C('o'), C('n'), C(' '), C('C'), C('l'), C('i'), C('p'), C('\0')};
char Aim_Position_Clip_Radius[] = {C('A'), C('i'), C('m'), C(' '), C('P'), C('o'), C('s'), C('i'), C('t'), C('i'), C('o'), C('n'), C(' '), C('C'), C('l'), C('i'), C('p'), C(' '), C('R'), C('a'), C('d'), C('i'), C('u'), C('s'), C('\0')};
char Aim_Pos_Z_adjust[] = {C('A'), C('i'), C('m'), C(' '), C('P'), C('o'), C('s'), C(' '), C('Z'), C(' '), C('a'), C('d'), C('j'), C('u'), C('s'), C('t'), C('\0')};
char Time_Correction[] = {C('T'), C('i'), C('m'), C('e'), C(' '), C('C'), C('o'), C('r'), C('r'), C('e'), C('c'), C('t'), C('i'), C('o'), C('n'), C('\0')};
char Time_Correction_Scalar[] = {C('T'), C('i'), C('m'), C('e'), C(' '), C('C'), C('o'), C('r'), C('r'), C('e'), C('c'), C('t'), C('i'), C('o'), C('n'), C(' '), C('S'), C('c'), C('a'), C('l'), C('a'), C('r'), C('\0')};
char Prediction_Scalar_X[] = {C('P'), C('r'), C('e'), C('d'), C('i'), C('c'), C('t'), C('i'), C('o'), C('n'), C(' '), C('S'), C('c'), C('a'), C('l'), C('a'), C('r'), C(' '), C('X'), C('\0')};
char Prediction_Scalar_Y[] = {C('P'), C('r'), C('e'), C('d'), C('i'), C('c'), C('t'), C('i'), C('o'), C('n'), C(' '), C('S'), C('c'), C('a'), C('l'), C('a'), C('r'), C(' '), C('Y'), C('\0')};
char Prediction_Scalar_Z[] = {C('P'), C('r'), C('e'), C('d'), C('i'), C('c'), C('t'), C('i'), C('o'), C('n'), C(' '), C('S'), C('c'), C('a'), C('l'), C('a'), C('r'), C(' '), C('Z'), C('\0')};
char Aim_Distance_Override[] = {C('A'), C('i'), C('m'), C(' '), C('D'), C('i'), C('s'), C('t'), C('a'), C('n'), C('c'), C('e'), C(' '), C('O'), C('v'), C('e'), C('r'), C('r'), C('i'), C('d'), C('e'), C('\0')};
char Removals[] = {C('R'), C('e'), C('m'), C('o'), C('v'), C('a'), C('l'), C('s'), C('\0')};
char No_Spread[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C('\0')};
char No_Sway[] = {C('N'), C('o'), C(' '), C('S'), C('w'), C('a'), C('y'), C('\0')};
char No_Shake[] = {C('N'), C('o'), C(' '), C('S'), C('h'), C('a'), C('k'), C('e'), C('\0')};
char Misc[] = {C('M'), C('i'), C('s'), C('c'), C('\0')};
char Full_Auto[] = {C('F'), C('u'), C('l'), C('l'), C(' '), C('A'), C('u'), C('t'), C('o'), C('\0')};
char Use_different_hook[] = {C('U'), C('s'), C('e'), C(' '), C('d'), C('i'), C('f'), C('f'), C('e'), C('r'), C('e'), C('n'), C('t'), C(' '), C('h'), C('o'), C('o'), C('k'), C('\0')};
char Aim_Visibility_Checks[] = {C('A'), C('i'), C('m'), C(' '), C('V'), C('i'), C('s'), C('i'), C('b'), C('i'), C('l'), C('i'), C('t'), C('y'), C(' '), C('C'), C('h'), C('e'), C('c'), C('k'), C('s'), C('\0')};
char Autowall_Alt_Sort[] = {C('A'), C('u'), C('t'), C('o'), C('w'), C('a'), C('l'), C('l'), C(' '), C('A'), C('l'), C('t'), C(' '), C('S'), C('o'), C('r'), C('t'), C('\0')};
char No_Spread_Debug_1[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C(' '), C('D'), C('e'), C('b'), C('u'), C('g'), C(' '), C('1'), C('\0')};
char No_Spread_Debug_2[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C(' '), C('D'), C('e'), C('b'), C('u'), C('g'), C(' '), C('2'), C('\0')};
char No_Spread_Debug_3[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C(' '), C('D'), C('e'), C('b'), C('u'), C('g'), C(' '), C('3'), C('\0')};
char No_Spread_Debug_4[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C(' '), C('D'), C('e'), C('b'), C('u'), C('g'), C(' '), C('4'), C('\0')};
char No_Spread_Debug_5[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C(' '), C('D'), C('e'), C('b'), C('u'), C('g'), C(' '), C('5'), C('\0')};
char No_Spread_Debug_6[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C(' '), C('D'), C('e'), C('b'), C('u'), C('g'), C(' '), C('6'), C('\0')};
char No_Spread_Debug_7[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C(' '), C('D'), C('e'), C('b'), C('u'), C('g'), C(' '), C('7'), C('\0')};
char No_Spread_Debug_8[] = {C('N'), C('o'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C(' '), C('D'), C('e'), C('b'), C('u'), C('g'), C(' '), C('8'), C('\0')};
char Mass_Murder[] = {C('M'), C('a'), C('s'), C('s'), C(' '), C('M'), C('u'), C('r'), C('d'), C('e'), C('r'), C('\0')};
char Mass_Murder_Value[] = {C('M'), C('a'), C('s'), C('s'), C(' '), C('M'), C('u'), C('r'), C('d'), C('e'), C('r'), C(' '), C('V'), C('a'), C('l'), C('u'), C('e'), C('\0')};
char Dont_aim_with_explosives[] = {C('D'), C('o'), C('n'), C('\''), C('t'), C(' '), C('a'), C('i'), C('m'), C(' '), C('w'), C('i'), C('t'), C('h'), C(' '), C('e'), C('x'), C('p'), C('l'), C('o'), C('s'), C('i'), C('v'), C('e'), C('s'), C('\0')};
char Dont_aim_when_prone[] = {C('D'), C('o'), C('n'), C('\''), C('t'), C(' '), C('a'), C('i'), C('m'), C(' '), C('w'), C('h'), C('e'), C('n'), C(' '), C('p'), C('r'), C('o'), C('n'), C('e'), C('\0')};
char Dont_aim_when_climbing[] = {C('D'), C('o'), C('n'), C('\''), C('t'), C(' '), C('a'), C('i'), C('m'), C(' '), C('w'), C('h'), C('e'), C('n'), C(' '), C('c'), C('l'), C('i'), C('m'), C('b'), C('i'), C('n'), C('g'), C('\0')};
char Ghost_CVars[] = {C('G'), C('h'), C('o'), C('s'), C('t'), C(' '), C('C'), C('V'), C('a'), C('r'), C('s'), C('\0')};
#ifdef VISUALS
char Auto_Vote[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('V'), C('o'), C('t'), C('e'), C('\0')};
char Auto_Melee[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('M'), C('e'), C('l'), C('e'), C('e'), C('\0')};
char Auto_Melee_Range[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('M'), C('e'), C('l'), C('e'), C('e'), C(' '), C('R'), C('a'), C('n'), C('g'), C('e'), C('\0')};
#endif
char Auto_Fire_FOV[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('F'), C('i'), C('r'), C('e'), C(' '), C('F'), C('O'), C('V'), C('\0')};
char Smooth_Aim[] = {C('S'), C('m'), C('o'), C('o'), C('t'), C('h'), C(' '), C('A'), C('i'), C('m'), C('\0')};
char Smooth_Aim_Divisions[] = {C('S'), C('m'), C('o'), C('o'), C('t'), C('h'), C(' '), C('A'), C('i'), C('m'), C(' '), C('D'), C('i'), C('v'), C('i'), C('s'), C('i'), C('o'), C('n'), C('s'), C('\0')};
char Smooth_Aim_Amplitude[] = {C('S'), C('m'), C('o'), C('o'), C('t'), C('h'), C(' '), C('A'), C('i'), C('m'), C(' '), C('A'), C('m'), C('p'), C('l'), C('i'), C('t'), C('u'), C('d'), C('e'), C('\0')};
char Smooth_Aim_Method[] = {C('S'), C('m'), C('o'), C('o'), C('t'), C('h'), C(' '), C('A'), C('i'), C('m'), C(' '), C('M'), C('e'), C('t'), C('h'), C('o'), C('d'), C('\0')};
char Aim_Acceleration[] = {C('A'), C('i'), C('m'), C(' '), C('A'), C('c'), C('c'), C('e'), C('l'), C('e'), C('r'), C('a'), C('t'), C('i'), C('o'), C('n'), C('\0')};
char Default[] = {C('D'), C('e'), C('f'), C('a'), C('u'), C('l'), C('t'), C('\0')};
char Threat[] = {C('T'), C('h'), C('r'), C('e'), C('a'), C('t'), C('\0')};
char Distance[] = {C('D'), C('i'), C('s'), C('t'), C('a'), C('n'), C('c'), C('e'), C('\0')};
char Distance_from_crosshair[] = {C('D'), C('i'), C('s'), C('t'), C('a'), C('n'), C('c'), C('e'), C(' '), C('f'), C('r'), C('o'), C('m'), C(' '), C('c'), C('r'), C('o'), C('s'), C('s'), C('h'), C('a'), C('i'), C('r'), C('\0')};
char Best_Aimed[] = {C('B'), C('e'), C('s'), C('t'), C(' '), C('A'), C('i'), C('m'), C('e'), C('d'), C('\0')};
char Draw_Target_Info[] = {C('D'), C('r'), C('a'), C('w'), C(' '), C('T'), C('a'), C('r'), C('g'), C('e'), C('t'), C(' '), C('I'), C('n'), C('f'), C('o'), C('\0')};
char Visuals[] = {C('V'), C('i'), C('s'), C('u'), C('a'), C('l'), C('s'), C('\0')};
char Bullet_Laser[] = {C('B'), C('u'), C('l'), C('l'), C('e'), C('t'), C(' '), C('L'), C('a'), C('s'), C('e'), C('r'), C('\0')};
char Weapon_Laser[] = {C('W'), C('e'), C('a'), C('p'), C('o'), C('n'), C(' '), C('L'), C('a'), C('s'), C('e'), C('r'), C('\0')};
char Bone_ESP[] = {C('B'), C('o'), C('n'), C('e'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Off[] = {C('O'), C('f'), C('f'), C('\0')};
char Line[] = {C('L'), C('i'), C('n'), C('e'), C('\0')};
char Box[] = {C('B'), C('o'), C('x'), C('\0')};
char Boner_ESP[] = {C('B'), C('o'), C('n'), C('e'), C('r'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Barrel_ESP[] = {C('B'), C('a'), C('r'), C('r'), C('e'), C('l'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Line_ESP[] = {C('L'), C('i'), C('n'), C('e'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Helicopter_ESP[] = {C('H'), C('e'), C('l'), C('i'), C('c'), C('o'), C('p'), C('t'), C('e'), C('r'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Airstrike_ESP[] = {C('A'), C('i'), C('r'), C('s'), C('t'), C('r'), C('i'), C('k'), C('e'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Snap_Lines[] = {C('S'), C('n'), C('a'), C('p'), C(' '), C('L'), C('i'), C('n'), C('e'), C('s'), C('\0')};
char Visuals_continued[] = {C('V'), C('i'), C('s'), C('u'), C('a'), C('l'), C('s'), C(' '), C('c'), C('o'), C('n'), C('t'), C('i'), C('n'), C('u'), C('e'), C('d'), C('\0')};
char Name_ESP[] = {C('N'), C('a'), C('m'), C('e'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Custom[] = {C('C'), C('u'), C('s'), C('t'), C('o'), C('m'), C('\0')};
char Engine[] = {C('E'), C('n'), C('g'), C('i'), C('n'), C('e'), C('\0')};
char Explosive_ESP[] = {C('E'), C('x'), C('p'), C('l'), C('o'), C('s'), C('i'), C('v'), C('e'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Icon[] = {C('I'), C('c'), C('o'), C('n'), C('\0')};
char Text[] = {C('T'), C('e'), C('x'), C('t'), C('\0')};
char Distance_ESP[] = {C('D'), C('i'), C('s'), C('t'), C('a'), C('n'), C('c'), C('e'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Weapon_ESP[] = {C('W'), C('e'), C('a'), C('p'), C('o'), C('n'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Pickup_ESP[] = {C('P'), C('i'), C('c'), C('k'), C('u'), C('p'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Bounding_Boxes[] = {C('B'), C('o'), C('u'), C('n'), C('d'), C('i'), C('n'), C('g'), C(' '), C('B'), C('o'), C('x'), C('e'), C('s'), C('\0')};
char _2D[] = {C('2'), C('D'), C('\0')};
char _3D[] = {C('3'), C('D'), C('\0')};
char Triangle_ESP[] = {C('T'), C('r'), C('i'), C('a'), C('n'), C('g'), C('l'), C('e'), C(' '), C('E'), C('S'), C('P'), C('\0')};
char Team_Filter[] = {C('T'), C('e'), C('a'), C('m'), C(' '), C('F'), C('i'), C('l'), C('t'), C('e'), C('r'), C('\0')};
char ESP_Font[] = {C('E'), C('S'), C('P'), C(' '), C('F'), C('o'), C('n'), C('t'), C('\0')};
char ESP_Font_Scale[] = {C('E'), C('S'), C('P'), C(' '), C('F'), C('o'), C('n'), C('t'), C(' '), C('S'), C('c'), C('a'), C('l'), C('e'), C('\0')};
char ESP_Shadow[] = {C('E'), C('S'), C('P'), C(' '), C('S'), C('h'), C('a'), C('d'), C('o'), C('w'), C('\0')};
char Radar[] = {C('R'), C('a'), C('d'), C('a'), C('r'), C('\0')};
char _2D_Radar[] = {C('2'), C('D'), C(' '), C('R'), C('a'), C('d'), C('a'), C('r'), C('\0')};
char Radar_Background[] = {C('R'), C('a'), C('d'), C('a'), C('r'), C(' '), C('B'), C('a'), C('c'), C('k'), C('g'), C('r'), C('o'), C('u'), C('n'), C('d'), C('\0')};
char Players[] = {C('P'), C('l'), C('a'), C('y'), C('e'), C('r'), C('s'), C('\0')};
char Explosives[] = {C('E'), C('x'), C('p'), C('l'), C('o'), C('s'), C('i'), C('v'), C('e'), C('s'), C('\0')};
char Pickups[] = {C('P'), C('i'), C('c'), C('k'), C('u'), C('p'), C('s'), C('\0')};
char Helicopters[] = {C('H'), C('e'), C('l'), C('i'), C('c'), C('o'), C('p'), C('t'), C('e'), C('r'), C('s'), C('\0')};
char Airstrikes[] = {C('A'), C('i'), C('r'), C('s'), C('t'), C('r'), C('i'), C('k'), C('e'), C('s'), C('\0')};
char Engine_Radar[] = {C('E'), C('n'), C('g'), C('i'), C('n'), C('e'), C(' '), C('R'), C('a'), C('d'), C('a'), C('r'), C('\0')};
char _2D_Radar_Size[] = {C('2'), C('D'), C(' '), C('R'), C('a'), C('d'), C('a'), C('r'), C(' '), C('S'), C('i'), C('z'), C('e'), C('\0')};
char _2D_Radar_Scale[] = {C('2'), C('D'), C(' '), C('R'), C('a'), C('d'), C('a'), C('r'), C(' '), C('S'), C('c'), C('a'), C('l'), C('e'), C('\0')};
char Circle_Radar[] = {C('C'), C('i'), C('r'), C('c'), C('l'), C('e'), C(' '), C('R'), C('a'), C('d'), C('a'), C('r'), C('\0')};
char Circle_Size[] = {C('C'), C('i'), C('r'), C('c'), C('l'), C('e'), C(' '), C('S'), C('i'), C('z'), C('e'), C('\0')};
#ifdef CHAMS
char D3D[] = {C('D'), C('3'), C('D'), C('\0')};
char Player_Chams[] = {C('P'), C('l'), C('a'), C('y'), C('e'), C('r'), C(' '), C('C'), C('h'), C('a'), C('m'), C('s'), C('\0')};
char Weapon_Chams[] = {C('W'), C('e'), C('a'), C('p'), C('o'), C('n'), C(' '), C('C'), C('h'), C('a'), C('m'), C('s'), C('\0')};
char Alpha_Blending[] = {C('A'), C('l'), C('p'), C('h'), C('a'), C(' '), C('B'), C('l'), C('e'), C('n'), C('d'), C('i'), C('n'), C('g'), C('\0')};
char Wallhack[] = {C('W'), C('a'), C('l'), C('l'), C('h'), C('a'), C('c'), C('k'), C('\0')};
char Wireframe[] = {C('W'), C('i'), C('r'), C('e'), C('f'), C('r'), C('a'), C('m'), C('e'), C('\0')};
char Dot[] = {C('D'), C('o'), C('t'), C('\0')};
char Wire[] = {C('W'), C('i'), C('r'), C('e'), C('\0')};
char Wireframe_Effects[] = {C('W'), C('i'), C('r'), C('e'), C('f'), C('r'), C('a'), C('m'), C('e'), C(' '), C('E'), C('f'), C('f'), C('e'), C('c'), C('t'), C('s'), C('\0')};
char Wall_Chams[] = {C('W'), C('a'), C('l'), C('l'), C(' '), C('C'), C('h'), C('a'), C('m'), C('s'), C('\0')};
char Wall_Wireframe[] = {C('W'), C('a'), C('l'), C('l'), C(' '), C('W'), C('i'), C('r'), C('e'), C('f'), C('r'), C('a'), C('m'), C('e'), C('\0')};
char Wall_Wallhack[] = {C('W'), C('a'), C('l'), C('l'), C(' '), C('W'), C('a'), C('l'), C('l'), C('h'), C('a'), C('c'), C('k'), C('\0')};
char Wall_Alpha_Blending[] = {C('W'), C('a'), C('l'), C('l'), C(' '), C('A'), C('l'), C('p'), C('h'), C('a'), C(' '), C('B'), C('l'), C('e'), C('n'), C('d'), C('i'), C('n'), C('g'), C('\0')};
#endif
char No_Recoil[] = {C('N'), C('o'), C(' '), C('R'), C('e'), C('c'), C('o'), C('i'), C('l'), C('\0')};
char No_Flash[] = {C('N'), C('o'), C(' '), C('F'), C('l'), C('a'), C('s'), C('h'), C('\0')};
char No_Effects[] = {C('N'), C('o'), C(' '), C('E'), C('f'), C('f'), C('e'), C('c'), C('t'), C('s'), C('\0')};
char No_Fog[] = {C('N'), C('o'), C(' '), C('F'), C('o'), C('g'), C('\0')};
char No_Lighting[] = {C('N'), C('o'), C(' '), C('L'), C('i'), C('g'), C('h'), C('t'), C('i'), C('n'), C('g'), C('\0')};
char No_HUD_Blood[] = {C('N'), C('o'), C(' '), C('H'), C('U'), C('D'), C(' '), C('B'), C('l'), C('o'), C('o'), C('d'), C('\0')};
char Removals_continued[] = {C('R'), C('e'), C('m'), C('o'), C('v'), C('a'), C('l'), C('s'), C(' '), C('c'), C('o'), C('n'), C('t'), C('i'), C('n'), C('u'), C('e'), C('d'), C('\0')};
char No_Night_Vision_Overlay[] = {C('N'), C('o'), C(' '), C('N'), C('i'), C('g'), C('h'), C('t'), C(' '), C('V'), C('i'), C('s'), C('i'), C('o'), C('n'), C(' '), C('O'), C('v'), C('e'), C('r'), C('l'), C('a'), C('y'), C('\0')};
char No_Sniper_Scope_Overlay[] = {C('N'), C('o'), C(' '), C('S'), C('n'), C('i'), C('p'), C('e'), C('r'), C(' '), C('S'), C('c'), C('o'), C('p'), C('e'), C(' '), C('O'), C('v'), C('e'), C('r'), C('l'), C('a'), C('y'), C('\0')};
char No_Bob[] = {C('N'), C('o'), C(' '), C('B'), C('o'), C('b'), C('\0')};
char No_Damage_Feedback[] = {C('N'), C('o'), C(' '), C('D'), C('a'), C('m'), C('a'), C('g'), C('e'), C(' '), C('F'), C('e'), C('e'), C('d'), C('b'), C('a'), C('c'), C('k'), C('\0')};
#ifndef X_VERSION
char No_Sky[] = {C('N'), C('o'), C(' '), C('S'), C('k'), C('y'), C('\0')};
#endif
char Post_Processing[] = {C('P'), C('o'), C('s'), C('t'), C(' '), C('P'), C('r'), C('o'), C('c'), C('e'), C('s'), C('s'), C('i'), C('n'), C('g'), C('\0')};
char Post_Processing_Enable[] = {C('P'), C('o'), C('s'), C('t'), C(' '), C('P'), C('r'), C('o'), C('c'), C('e'), C('s'), C('s'), C('i'), C('n'), C('g'), C(' '), C('E'), C('n'), C('a'), C('b'), C('l'), C('e'), C('\0')};
char Brightness[] = {C('B'), C('r'), C('i'), C('g'), C('h'), C('t'), C('n'), C('e'), C('s'), C('s'), C('\0')};
char Contrast[] = {C('C'), C('o'), C('n'), C('t'), C('r'), C('a'), C('s'), C('t'), C('\0')};
char Desaturation[] = {C('D'), C('e'), C('s'), C('a'), C('t'), C('u'), C('r'), C('a'), C('t'), C('i'), C('o'), C('n'), C('\0')};
char Invert[] = {C('I'), C('n'), C('v'), C('e'), C('r'), C('t'), C('\0')};
char Bloom[] = {C('B'), C('l'), C('o'), C('o'), C('m'), C('\0')};
char Warnings[] = {C('W'), C('a'), C('r'), C('n'), C('i'), C('n'), C('g'), C('s'), C('\0')};
char Crosshair[] = {C('C'), C('r'), C('o'), C('s'), C('s'), C('h'), C('a'), C('i'), C('r'), C('\0')};
char Crosshair_Width[] = {C('C'), C('r'), C('o'), C('s'), C('s'), C('h'), C('a'), C('i'), C('r'), C(' '), C('W'), C('i'), C('d'), C('t'), C('h'), C('\0')};
char Crosshair_Height[] = {C('C'), C('r'), C('o'), C('s'), C('s'), C('h'), C('a'), C('i'), C('r'), C(' '), C('H'), C('e'), C('i'), C('g'), C('h'), C('t'), C('\0')};
char Crosshair_Spread[] = {C('C'), C('r'), C('o'), C('s'), C('s'), C('h'), C('a'), C('i'), C('r'), C(' '), C('S'), C('p'), C('r'), C('e'), C('a'), C('d'), C('\0')};
char Crosshair_Shadow[] = {C('C'), C('r'), C('o'), C('s'), C('s'), C('h'), C('a'), C('i'), C('r'), C(' '), C('S'), C('h'), C('a'), C('d'), C('o'), C('w'), C('\0')};
char Info_Bar[] = {C('I'), C('n'), C('f'), C('o'), C(' '), C('B'), C('a'), C('r'), C('\0')};
char Name_Stealer[] = {C('N'), C('a'), C('m'), C('e'), C(' '), C('S'), C('t'), C('e'), C('a'), C('l'), C('e'), C('r'), C('\0')};
char Name_Steal_Interval[] = {C('N'), C('a'), C('m'), C('e'), C(' '), C('S'), C('t'), C('e'), C('a'), C('l'), C(' '), C('I'), C('n'), C('t'), C('e'), C('r'), C('v'), C('a'), C('l'), C('\0')};
char Clock[] = {C('C'), C('l'), C('o'), C('c'), C('k'), C('\0')};
char Clock_Size[] = {C('C'), C('l'), C('o'), C('c'), C('k'), C(' '), C('S'), C('i'), C('z'), C('e'), C('\0')};
char Health_Bar[] = {C('H'), C('e'), C('a'), C('l'), C('t'), C('h'), C(' '), C('B'), C('a'), C('r'), C('\0')};
char Misc_continued[] = {C('M'), C('i'), C('s'), C('c'), C(' '), C('c'), C('o'), C('n'), C('t'), C('i'), C('n'), C('u'), C('e'), C('d'), C('\0')};
char Auto_Grenade_Throwback[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('G'), C('r'), C('e'), C('n'), C('a'), C('d'), C('e'), C(' '), C('T'), C('h'), C('r'), C('o'), C('w'), C('b'), C('a'), C('c'), C('k'), C('\0')};
char Force_LOD[] = {C('F'), C('o'), C('r'), C('c'), C('e'), C(' '), C('L'), C('O'), C('D'), C('\0')};
char Spin[] = {C('S'), C('p'), C('i'), C('n'), C('\0')};
char Spin_Degrees[] = {C('S'), C('p'), C('i'), C('n'), C(' '), C('D'), C('e'), C('g'), C('r'), C('e'), C('e'), C('s'), C('\0')};
char Anti_Death[] = {C('A'), C('n'), C('t'), C('i'), C(' '), C('D'), C('e'), C('a'), C('t'), C('h'), C('\0')};
char Kill_Stats[] = {C('K'), C('i'), C('l'), C('l'), C(' '), C('S'), C('t'), C('a'), C('t'), C('s'), C('\0')};
char Kill_Spam[] = {C('K'), C('i'), C('l'), C('l'), C(' '), C('S'), C('p'), C('a'), C('m'), C('\0')};
char Kill_Sounds[] = {C('K'), C('i'), C('l'), C('l'), C(' '), C('S'), C('o'), C('u'), C('n'), C('d'), C('s'), C('\0')};
char Fly_Cam[] = {C('F'), C('l'), C('y'), C(' '), C('C'), C('a'), C('m'), C('\0')};
char Fly_Cam_Speed[] = {C('F'), C('l'), C('y'), C(' '), C('C'), C('a'), C('m'), C(' '), C('S'), C('p'), C('e'), C('e'), C('d'), C('\0')};
char Dodge[] = {C('D'), C('o'), C('d'), C('g'), C('e'), C('\0')};
char Crouch[] = {C('C'), C('r'), C('o'), C('u'), C('c'), C('h'), C('\0')};
char Prone[] = {C('P'), C('r'), C('o'), C('n'), C('e'), C('\0')};
char DVar_Unlocker[] = {C('D'), C('V'), C('a'), C('r'), C(' '), C('U'), C('n'), C('l'), C('o'), C('c'), C('k'), C('e'), C('r'), C('\0')};
char Save_Configuration[] = {C('S'), C('a'), C('v'), C('e'), C(' '), C('C'), C('o'), C('n'), C('f'), C('i'), C('g'), C('u'), C('r'), C('a'), C('t'), C('i'), C('o'), C('n'), C('\0')};
char Aim_Lerp_Scalar[] = {C('A'), C('i'), C('m'), C(' '), C('L'), C('e'), C('r'), C('p'), C(' '), C('S'), C('c'), C('a'), C('l'), C('a'), C('r'), C('\0')};
char Moving_XHair[] = {C('M'), C('o'), C('v'), C('i'), C('n'), C('g'), C(' '), C('X'), C('H'), C('a'), C('i'), C('r'), C('\0')};
#ifdef COMPILE_DEBUG
char Debug[] = {C('D'), C('e'), C('b'), C('u'), C('g'), C('\0')};
#endif
char Auto_Melee_Max_Threats[] = {C('A'), C('u'), C('t'), C('o'), C(' '), C('M'), C('e'), C('l'), C('e'), C('e'), C(' '), C('M'), C('a'), C('x'), C(' '), C('T'), C('h'), C('r'), C('e'), C('a'), C('t'), C('s'), C('\0')};
char Bounding_Box_Thickness[] = {C('B'), C('o'), C('u'), C('n'), C('d'), C('i'), C('n'), C('g'), C(' '), C('B'), C('o'), C('x'), C(' '), C('T'), C('h'), C('i'), C('c'), C('k'), C('n'), C('e'), C('s'), C('s'), C('\0')};
char Bounding_Box_Shadow[] = {C('B'), C('o'), C('u'), C('n'), C('d'), C('i'), C('n'), C('g'), C(' '), C('B'), C('o'), C('x'), C(' '), C('S'), C('h'), C('a'), C('d'), C('o'), C('w'), C('\0')};
char GUI_Outline_Thickness[] = {C('G'), C('U'), C('I'), C(' '), C('O'), C('u'), C('t'), C('l'), C('i'), C('n'), C('e'), C(' '), C('T'), C('h'), C('i'), C('c'), C('k'), C('n'), C('e'), C('s'), C('s'), C('\0')};
char Round_Outlines[] = {C('R'), C('o'), C('u'), C('n'), C('d'), C(' '), C('O'), C('u'), C('t'), C('l'), C('i'), C('n'), C('e'), C('s'), C('\0')};
char Alpha_Source[] = {C('A'), C('l'), C('p'), C('h'), C('a'), C(' '), C('S'), C('o'), C('u'), C('r'), C('c'), C('e'), C('\0')};
char Alpha_Destination[] = {C('A'), C('l'), C('p'), C('h'), C('a'), C(' '), C('D'), C('e'), C('s'), C('t'), C('i'), C('n'), C('a'), C('t'), C('i'), C('o'), C('n'), C('\0')};
#ifdef PBSS_CLEANER
char PBSS_Cleaner[] = {C('P'), C('B'), C('S'), C('S'), C(' '), C('C'), C('l'), C('e'), C('a'), C('n'), C('e'), C('r'), C('\0')};
#endif
char Wall[] = {C('W'), C('a'), C('l'), C('l'), C('\0')};
char Weapon_Visible[] = {C('W'), C('e'), C('a'), C('p'), C('o'), C('n'), C(' '), C('V'), C('i'), C('s'), C('i'), C('b'), C('l'), C('e'), C('\0')};
char Weapon_Hidden[] = {C('W'), C('e'), C('a'), C('p'), C('o'), C('n'), C(' '), C('H'), C('i'), C('d'), C('d'), C('e'), C('n'), C('\0')};
char Chams_Enemy_Hidden[] = {C('C'), C('h'), C('a'), C('m'), C('s'), C(' '), C('E'), C('n'), C('e'), C('m'), C('y'), C(' '), C('H'), C('i'), C('d'), C('d'), C('e'), C('n'), C('\0')};
char Chams_Friendly_Visible[] = {C('C'), C('h'), C('a'), C('m'), C('s'), C(' '), C('F'), C('r'), C('i'), C('e'), C('n'), C('d'), C('l'), C('y'), C(' '), C('V'), C('i'), C('s'), C('i'), C('b'), C('l'), C('e'), C('\0')};
char Chams_Enemy_Visible[] = {C('C'), C('h'), C('a'), C('m'), C('s'), C(' '), C('E'), C('n'), C('e'), C('m'), C('y'), C(' '), C('V'), C('i'), C('s'), C('i'), C('b'), C('l'), C('e'), C('\0')};
char Chams_Friendly_Hidden[] = {C('C'), C('h'), C('a'), C('m'), C('s'), C(' '), C('F'), C('r'), C('i'), C('e'), C('n'), C('d'), C('l'), C('y'), C(' '), C('H'), C('i'), C('d'), C('d'), C('e'), C('n'), C('\0')};
char neck[] = {C('n'), C('e'), C('c'), C('k'), C('\0')};
char pelvis[] = {C('p'), C('e'), C('l'), C('v'), C('i'), C('s'), C('\0')};
char white[] = {C('w'), C('h'), C('i'), C('t'), C('e'), C('\0')};
char compassping_player[] = {C('c'), C('o'), C('m'), C('p'), C('a'), C('s'), C('s'), C('p'), C('i'), C('n'), C('g'), C('_'), C('p'), C('l'), C('a'), C('y'), C('e'), C('r'), C('\0')};
char compassping_grenade[] = {C('c'), C('o'), C('m'), C('p'), C('a'), C('s'), C('s'), C('p'), C('i'), C('n'), C('g'), C('_'), C('g'), C('r'), C('e'), C('n'), C('a'), C('d'), C('e'), C('\0')};
char hud_grenadepointer[] = {C('h'), C('u'), C('d'), C('_'), C('g'), C('r'), C('e'), C('n'), C('a'), C('d'), C('e'), C('p'), C('o'), C('i'), C('n'), C('t'), C('e'), C('r'), C('\0')};
char compassping_explosion[] = {C('c'), C('o'), C('m'), C('p'), C('a'), C('s'), C('s'), C('p'), C('i'), C('n'), C('g'), C('_'), C('e'), C('x'), C('p'), C('l'), C('o'), C('s'), C('i'), C('o'), C('n'), C('\0')};
char compass_objpoint_helicopter_friendly[] = {C('c'), C('o'), C('m'), C('p'), C('a'), C('s'), C('s'), C('_'), C('o'), C('b'), C('j'), C('p'), C('o'), C('i'), C('n'), C('t'), C('_'), C('h'), C('e'), C('l'), C('i'), C('c'), C('o'), C('p'), C('t'), C('e'), C('r'), C('_'), C('f'), C('r'), C('i'), C('e'), C('n'), C('d'), C('l'), C('y'), C('\0')};
char compass_objpoint_airstrike_friendly[] = {C('c'), C('o'), C('m'), C('p'), C('a'), C('s'), C('s'), C('_'), C('o'), C('b'), C('j'), C('p'), C('o'), C('i'), C('n'), C('t'), C('_'), C('a'), C('i'), C('r'), C('s'), C('t'), C('r'), C('i'), C('k'), C('e'), C('_'), C('f'), C('r'), C('i'), C('e'), C('n'), C('d'), C('l'), C('y'), C('\0')};
char fonts_smallDevFont[] = {C('f'), C('o'), C('n'), C('t'), C('s'), C('/'), C('s'), C('m'), C('a'), C('l'), C('l'), C('D'), C('e'), C('v'), C('F'), C('o'), C('n'), C('t'), C('\0')};
char fonts_consoleFont[] = {C('f'), C('o'), C('n'), C('t'), C('s'), C('/'), C('c'), C('o'), C('n'), C('s'), C('o'), C('l'), C('e'), C('F'), C('o'), C('n'), C('t'), C('\0')};
char fonts_normalfont[] = {C('f'), C('o'), C('n'), C('t'), C('s'), C('/'), C('n'), C('o'), C('r'), C('m'), C('a'), C('l'), C('f'), C('o'), C('n'), C('t'), C('\0')};
char fonts_boldFont[] = {C('f'), C('o'), C('n'), C('t'), C('s'), C('/'), C('b'), C('o'), C('l'), C('d'), C('F'), C('o'), C('n'), C('t'), C('\0')};


void DecryptStrings()
{
#if 0
   DECRYPTEX(&countdown, _SEK, 10);
   DECRYPTEX(&bog, _SEK, 4);
   DECRYPTEX(&backlot, _SEK, 8);
   DECRYPTEX(&killhouse, _SEK, 10);
   DECRYPTEX(&j_head, _SEK, 7);
   DECRYPTEX(&j_spineupper, _SEK, 13);
   DECRYPTEX(&j_spinelower, _SEK, 13);
   DECRYPTEX(&j_hip_le, _SEK, 9);
   DECRYPTEX(&j_hip_ri, _SEK, 9);
   DECRYPTEX(&j_shoulder_le, _SEK, 14);
   DECRYPTEX(&j_shoulder_ri, _SEK, 14);
   DECRYPTEX(&j_knee_le, _SEK, 10);
   DECRYPTEX(&j_knee_ri, _SEK, 10);
   DECRYPTEX(&j_ankle_le, _SEK, 11);
   DECRYPTEX(&j_ankle_ri, _SEK, 11);
   DECRYPTEX(&j_wrist_le, _SEK, 11);
   DECRYPTEX(&j_wrist_ri, _SEK, 11);
   DECRYPTEX(&j_clavicle_le, _SEK, 14);
   DECRYPTEX(&j_clavicle_ri, _SEK, 14);
   DECRYPTEX(&j_elbow_le, _SEK, 11);
   DECRYPTEX(&j_elbow_ri, _SEK, 11);
   DECRYPTEX(&j_neck, _SEK, 7);
   DECRYPTEX(&j_helmet, _SEK, 9);
   DECRYPTEX(&WEAPON_M2FRAGGRENADE, _SEK, 21);
   DECRYPTEX(&WEAPON_CLAYMORE, _SEK, 16);
   DECRYPTEX(&WEAPON_FLASH_GRENADE, _SEK, 21);
   DECRYPTEX(&WEAPON_CONCUSSION_GRENADE, _SEK, 26);
   DECRYPTEX(&WEAPON_C4, _SEK, 10);
   DECRYPTEX(&WEAPON_SMOKE_GRENADE, _SEK, 21);
   DECRYPTEX(&WEAPON_M203, _SEK, 12);
   DECRYPTEX(&WEAPON_RPG, _SEK, 11);
   DECRYPTEX(&neck, _SEK, 5);
   DECRYPTEX(&pelvis, _SEK, 7);
   DECRYPTEX(&white, _SEK, 6);
   DECRYPTEX(&compassping_player, _SEK, 19);
   DECRYPTEX(&compassping_grenade, _SEK, 20);
   DECRYPTEX(&hud_grenadepointer, _SEK, 19);
   DECRYPTEX(&compassping_explosion, _SEK, 22);
   DECRYPTEX(&compass_objpoint_helicopter_friendly, _SEK, 37);
   DECRYPTEX(&compass_objpoint_airstrike_friendly, _SEK, 36);
   DECRYPTEX(&fonts_smallDevFont, _SEK, 19);
   DECRYPTEX(&fonts_consoleFont, _SEK, 18);
   DECRYPTEX(&fonts_normalfont, _SEK, 17);
   DECRYPTEX(&fonts_boldFont, _SEK, 15);
#endif
   DECRYPTEX(&Bots, _SEK, 5);
   DECRYPTEX(&Player_Auto_Aim, _SEK, 16);
   DECRYPTEX(&Auto_Aim_Max_Range, _SEK, 19);
   DECRYPTEX(&Aim_Bone_Quantity, _SEK, 18);
   DECRYPTEX(&Aim_Bone_Start_Index, _SEK, 21);
   DECRYPTEX(&Aim_View_Lock, _SEK, 14);
   DECRYPTEX(&Auto_Fire, _SEK, 10);
   DECRYPTEX(&Auto_Sight, _SEK, 11);
   DECRYPTEX(&Aim_FOV, _SEK, 8);
   DECRYPTEX(&Bots_continued, _SEK, 15);
   DECRYPTEX(&Aim_Target_Lock, _SEK, 16);
   DECRYPTEX(&Aim_Prediction, _SEK, 15);
   DECRYPTEX(&Local_Prediction, _SEK, 17);
   DECRYPTEX(&Ping_Correction, _SEK, 16);
   DECRYPTEX(&Ping_Divisor, _SEK, 13);
   DECRYPTEX(&Ping_Scalar, _SEK, 12);
   DECRYPTEX(&Silent_Aim, _SEK, 11);
   DECRYPTEX(&Auto_Wall, _SEK, 10);
   DECRYPTEX(&Auto_Wall_Tolerance, _SEK, 20);
   DECRYPTEX(&Bots_continued_2, _SEK, 17);
   DECRYPTEX(&Aim_Sorting_Method, _SEK, 19);
   DECRYPTEX(&Aim_Position_Clip, _SEK, 18);
   DECRYPTEX(&Aim_Position_Clip_Radius, _SEK, 25);
   DECRYPTEX(&Aim_Pos_Z_adjust, _SEK, 17);
   DECRYPTEX(&Time_Correction, _SEK, 16);
   DECRYPTEX(&Time_Correction_Scalar, _SEK, 23);
   DECRYPTEX(&Prediction_Scalar_X, _SEK, 20);
   DECRYPTEX(&Prediction_Scalar_Y, _SEK, 20);
   DECRYPTEX(&Prediction_Scalar_Z, _SEK, 20);
   DECRYPTEX(&Aim_Distance_Override, _SEK, 22);
   DECRYPTEX(&Removals, _SEK, 9);
   DECRYPTEX(&No_Spread, _SEK, 10);
   DECRYPTEX(&No_Sway, _SEK, 8);
   DECRYPTEX(&No_Shake, _SEK, 9);
   DECRYPTEX(&Misc, _SEK, 5);
   DECRYPTEX(&Full_Auto, _SEK, 10);
   DECRYPTEX(&Use_different_hook, _SEK, 19);
   DECRYPTEX(&Aim_Visibility_Checks, _SEK, 22);
   DECRYPTEX(&Autowall_Alt_Sort, _SEK, 18);
   DECRYPTEX(&No_Spread_Debug_1, _SEK, 18);
   DECRYPTEX(&No_Spread_Debug_2, _SEK, 18);
   DECRYPTEX(&No_Spread_Debug_3, _SEK, 18);
   DECRYPTEX(&No_Spread_Debug_4, _SEK, 18);
   DECRYPTEX(&No_Spread_Debug_5, _SEK, 18);
   DECRYPTEX(&No_Spread_Debug_6, _SEK, 18);
   DECRYPTEX(&No_Spread_Debug_7, _SEK, 18);
   DECRYPTEX(&No_Spread_Debug_8, _SEK, 18);
   DECRYPTEX(&Mass_Murder, _SEK, 12);
   DECRYPTEX(&Mass_Murder_Value, _SEK, 18);
   DECRYPTEX(&Dont_aim_with_explosives, _SEK, 27);
   DECRYPTEX(&Dont_aim_when_prone, _SEK, 22);
   DECRYPTEX(&Dont_aim_when_climbing, _SEK, 25);
   DECRYPTEX(&Ghost_CVars, _SEK, 12);
#ifdef VISUALS
   DECRYPTEX(&Auto_Vote, _SEK, 10);
   DECRYPTEX(&Auto_Melee, _SEK, 11);
   DECRYPTEX(&Auto_Melee_Range, _SEK, 17);
#endif // VISUALS
   DECRYPTEX(&Auto_Fire_FOV, _SEK, 14);
   DECRYPTEX(&Smooth_Aim, _SEK, 11);
   DECRYPTEX(&Smooth_Aim_Divisions, _SEK, 21);
   DECRYPTEX(&Smooth_Aim_Amplitude, _SEK, 21);
   DECRYPTEX(&Smooth_Aim_Method, _SEK, 18);
   DECRYPTEX(&Aim_Acceleration, _SEK, 17);
   DECRYPTEX(&Default, _SEK, 8);
   DECRYPTEX(&Threat, _SEK, 7);
   DECRYPTEX(&Distance, _SEK, 9);
   DECRYPTEX(&Distance_from_crosshair, _SEK, 24);
   DECRYPTEX(&Best_Aimed, _SEK, 11);
   DECRYPTEX(&Draw_Target_Info, _SEK, 17);
   DECRYPTEX(&Visuals, _SEK, 8);
   DECRYPTEX(&Bullet_Laser, _SEK, 13);
   DECRYPTEX(&Weapon_Laser, _SEK, 13);
   DECRYPTEX(&Bone_ESP, _SEK, 9);
   DECRYPTEX(&Off, _SEK, 4);
   DECRYPTEX(&Line, _SEK, 5);
   DECRYPTEX(&Box, _SEK, 4);
   DECRYPTEX(&Boner_ESP, _SEK, 10);
   DECRYPTEX(&Barrel_ESP, _SEK, 11);
   DECRYPTEX(&Line_ESP, _SEK, 9);
   DECRYPTEX(&Helicopter_ESP, _SEK, 15);
   DECRYPTEX(&Airstrike_ESP, _SEK, 14);
   DECRYPTEX(&Snap_Lines, _SEK, 11);
   DECRYPTEX(&Visuals_continued, _SEK, 18);
   DECRYPTEX(&Name_ESP, _SEK, 9);
   DECRYPTEX(&Custom, _SEK, 7);
   DECRYPTEX(&Engine, _SEK, 7);
   DECRYPTEX(&Explosive_ESP, _SEK, 14);
   DECRYPTEX(&Icon, _SEK, 5);
   DECRYPTEX(&Text, _SEK, 5);
   DECRYPTEX(&Distance_ESP, _SEK, 13);
   DECRYPTEX(&Weapon_ESP, _SEK, 11);
   DECRYPTEX(&Pickup_ESP, _SEK, 11);
   DECRYPTEX(&Bounding_Boxes, _SEK, 15);
   DECRYPTEX(&_2D, _SEK, 3);
   DECRYPTEX(&_3D, _SEK, 3);
   DECRYPTEX(&Triangle_ESP, _SEK, 13);
   DECRYPTEX(&Team_Filter, _SEK, 12);
   DECRYPTEX(&ESP_Font, _SEK, 9);
   DECRYPTEX(&ESP_Font_Scale, _SEK, 15);
   DECRYPTEX(&ESP_Shadow, _SEK, 11);
   DECRYPTEX(&Radar, _SEK, 6);
   DECRYPTEX(&_2D_Radar, _SEK, 9);
   DECRYPTEX(&Radar_Background, _SEK, 17);
   DECRYPTEX(&Players, _SEK, 8);
   DECRYPTEX(&Explosives, _SEK, 11);
   DECRYPTEX(&Pickups, _SEK, 8);
   DECRYPTEX(&Helicopters, _SEK, 12);
   DECRYPTEX(&Airstrikes, _SEK, 11);
   DECRYPTEX(&Engine_Radar, _SEK, 13);
   DECRYPTEX(&_2D_Radar_Size, _SEK, 14);
   DECRYPTEX(&_2D_Radar_Scale, _SEK, 15);
   DECRYPTEX(&Circle_Radar, _SEK, 13);
   DECRYPTEX(&Circle_Size, _SEK, 12);
#ifdef CHAMS
   DECRYPTEX(&D3D, _SEK, 4);
   DECRYPTEX(&Player_Chams, _SEK, 13);
   DECRYPTEX(&Weapon_Chams, _SEK, 13);
   DECRYPTEX(&Alpha_Blending, _SEK, 15);
   DECRYPTEX(&Wallhack, _SEK, 9);
   DECRYPTEX(&Wireframe, _SEK, 10);
   DECRYPTEX(&Dot, _SEK, 4);
   DECRYPTEX(&Wire, _SEK, 5);
   DECRYPTEX(&Wireframe_Effects, _SEK, 18);
   DECRYPTEX(&Wall_Chams, _SEK, 11);
   DECRYPTEX(&Wall_Wireframe, _SEK, 15);
   DECRYPTEX(&Wall_Wallhack, _SEK, 14);
   DECRYPTEX(&Wall_Alpha_Blending, _SEK, 20);
#endif // CHAMS
   DECRYPTEX(&No_Recoil, _SEK, 10);
   DECRYPTEX(&No_Flash, _SEK, 9);
   DECRYPTEX(&No_Effects, _SEK, 11);
   DECRYPTEX(&No_Fog, _SEK, 7);
   DECRYPTEX(&No_Lighting, _SEK, 12);
   DECRYPTEX(&No_HUD_Blood, _SEK, 13);
   DECRYPTEX(&Removals_continued, _SEK, 19);
   DECRYPTEX(&No_Night_Vision_Overlay, _SEK, 24);
   DECRYPTEX(&No_Sniper_Scope_Overlay, _SEK, 24);
   DECRYPTEX(&No_Bob, _SEK, 7);
   DECRYPTEX(&No_Damage_Feedback, _SEK, 19);
#ifndef X_VERSION
   DECRYPTEX(&No_Sky, _SEK, 7);
#endif // X_VERSION
   DECRYPTEX(&Post_Processing, _SEK, 16);
   DECRYPTEX(&Post_Processing_Enable, _SEK, 23);
   DECRYPTEX(&Brightness, _SEK, 11);
   DECRYPTEX(&Contrast, _SEK, 9);
   DECRYPTEX(&Desaturation, _SEK, 13);
   DECRYPTEX(&Invert, _SEK, 7);
   DECRYPTEX(&Bloom, _SEK, 6);
   DECRYPTEX(&Warnings, _SEK, 9);
   DECRYPTEX(&Crosshair, _SEK, 10);
   DECRYPTEX(&Crosshair_Width, _SEK, 16);
   DECRYPTEX(&Crosshair_Height, _SEK, 17);
   DECRYPTEX(&Crosshair_Spread, _SEK, 17);
   DECRYPTEX(&Crosshair_Shadow, _SEK, 17);
   DECRYPTEX(&Info_Bar, _SEK, 9);
   DECRYPTEX(&Name_Stealer, _SEK, 13);
   DECRYPTEX(&Name_Steal_Interval, _SEK, 20);
   DECRYPTEX(&Clock, _SEK, 6);
   DECRYPTEX(&Clock_Size, _SEK, 11);
   DECRYPTEX(&Health_Bar, _SEK, 11);
   DECRYPTEX(&Misc_continued, _SEK, 15);
   DECRYPTEX(&Auto_Grenade_Throwback, _SEK, 23);
   DECRYPTEX(&Force_LOD, _SEK, 10);
   DECRYPTEX(&Spin, _SEK, 5);
   DECRYPTEX(&Spin_Degrees, _SEK, 13);
   DECRYPTEX(&Anti_Death, _SEK, 11);
   DECRYPTEX(&Kill_Stats, _SEK, 11);
   DECRYPTEX(&Kill_Spam, _SEK, 10);
   DECRYPTEX(&Kill_Sounds, _SEK, 12);
   DECRYPTEX(&Fly_Cam, _SEK, 8);
   DECRYPTEX(&Fly_Cam_Speed, _SEK, 14);
   DECRYPTEX(&Dodge, _SEK, 6);
   DECRYPTEX(&Crouch, _SEK, 7);
   DECRYPTEX(&Prone, _SEK, 6);
   DECRYPTEX(&DVar_Unlocker, _SEK, 14);
   DECRYPTEX(&Save_Configuration, _SEK, 19);
   DECRYPTEX(&Aim_Lerp_Scalar, _SEK, 16);
   DECRYPTEX(&Moving_XHair, _SEK, 13);
#ifdef COMPILE_DEBUG
   DECRYPTEX(&Debug, _SEK, 6);
#endif // COMPILE_DEBUG
   DECRYPTEX(&Auto_Melee_Max_Threats, _SEK, 23);
   DECRYPTEX(&Bounding_Box_Thickness, _SEK, 23);
   DECRYPTEX(&Bounding_Box_Shadow, _SEK, 20);
   DECRYPTEX(&GUI_Outline_Thickness, _SEK, 22);
   DECRYPTEX(&Round_Outlines, _SEK, 15);
   DECRYPTEX(&Alpha_Source, _SEK, 13);
   DECRYPTEX(&Alpha_Destination, _SEK, 18);
#ifdef PBSS_CLEANER
   DECRYPTEX(&PBSS_Cleaner, _SEK, 13);
#endif // PBSS_CLEANER
   DECRYPTEX(&Wall, _SEK, 5);
   DECRYPTEX(&Weapon_Visible, _SEK, 15);
   DECRYPTEX(&Weapon_Hidden, _SEK, 14);
   DECRYPTEX(&Chams_Enemy_Hidden, _SEK, 19);
   DECRYPTEX(&Chams_Friendly_Visible, _SEK, 23);
   DECRYPTEX(&Chams_Enemy_Visible, _SEK, 20);
   DECRYPTEX(&Chams_Friendly_Hidden, _SEK, 22);
}
